dist: xenial
language: php
matrix:
  fast_finish: true
  include:
   - php: 7.4
     env: COMPOSER_PHPUNIT=true
services:
  - docker

cache:
  directories:
    - $HOME/.cache/pip
    # Cache directory for older Composer versions.
    - $HOME/.composer/cache/files
    # Cache directory for more recent Composer versions.
    - $HOME/.cache/composer/files

install:
 # Speed up build time by disabling Xdebug unless actually needed.
 # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
 # https://twitter.com/kelunik/status/954242454676475904
 - if [ "$TEST_COVERAGE" != '1' ]; then phpenv config-rm xdebug.ini || echo 'No xdebug config.'; fi

 # Setup the test server
 - if [ "$COMPOSER_PHPUNIT" == 'false' ]; then composer remove phpunit/phpunit --dev; fi
 - if [ "$COMPOSER_PHPUNIT" == 'false' ]; then export PHPUNIT_BIN="phpunit";
   else export PHPUNIT_BIN="../vendor/bin/phpunit";
   fi
 - |
  if [ ${TRAVIS_PHP_VERSION} == "nightly" ]; then
   composer install --no-interaction --ignore-platform-reqs;
  else
    composer install --dev --no-interaction;
  fi

 # Setup the proxy
 # - pip install --user mitmproxy==0.18.2

before_script:
 - PHPBIN=$TESTPHPBIN PORT=8080 vendor/bin/start.sh
 - export REQUESTS_TEST_HOST_HTTP="localhost:8080"

 # Work out of the tests directory
 - cd tests
 #- PROXYBIN=mitmdump PORT=9002 utils/proxy/start.sh
 #- PROXYBIN=mitmdump PORT=9003 AUTH="test:pass" utils/proxy/start.sh
 - chmod +x utils/proxy/start_docker.sh
 - utils/proxy/start_docker.sh
 - export REQUESTS_HTTP_PROXY="localhost:9002"
 - export REQUESTS_HTTP_PROXY_AUTH="localhost:9003"
 - export REQUESTS_HTTP_PROXY_AUTH_USER="test"
 - export REQUESTS_HTTP_PROXY_AUTH_PASS="pass"

 # Ensure the HTTPS test instance on Heroku is spun up
 - curl -s -I http://requests-php-tests.herokuapp.com/ > /dev/null
 
 # Environment checks
 - $PHPUNIT_BIN --version

script:
 #- php proxy_debug.php
 - |
   if [ "$TEST_COVERAGE" == '1' ]; then
     $PHPUNIT_BIN --coverage-clover clover.xml;
   # PHPUnit 4.x does not yet support the `no-coverage` flag.
   elif [ ${TRAVIS_PHP_VERSION:0:3} == "5.2" ]; then
     $PHPUNIT_BIN;
   else
     $PHPUNIT_BIN --no-coverage;
   fi

after_script:
 - docker container stop $(docker container ls -aq)
 - cd ..
 - PATH=$PATH vendor/bin/stop.sh
 - test $TEST_COVERAGE && bash <(curl -s https://codecov.io/bash)
